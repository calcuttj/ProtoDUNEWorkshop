#include "BeamEvent.fcl"
#include "services_dune.fcl"
process_name: myBeamInfo 

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_data
  ChannelStatusService: @local::dunefd_channel_status
#  ExptGeoHelperInterface:       @local::dune_geometry_helper
  WireReadout:          @local::dune_wire_readout
  GeometryConfigurationWriter:  {}
  Geometry:                     @local::protodunehdv7_geo
  DetectorClocksService:        @local::protodunehd_detectorclocks
  DetectorPropertiesService:    @local::protodunehd_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft
  DatabaseUtil:                 @local::dunefd_database
  IFDH:                         {}
  IFBeam:            {} 

  TFileService: 
  {
    fileName: "pdhd_keepup_decoder.root"
  } 
}

physics:
{
  producers:
  {
    beamevent: @local::pdhd_beamevent
  }

  produce: [
    beamevent
  ]

  output: [ out1 ]
  trigger_paths : [ produce ]
  end_paths: [ output ]
}

outputs:
{
  out1:
  {
    outputCommands: [ "keep *"]
    compressionLevel: 1
    module_type: RootOutput
    fileName: "%ifb_%tc_keepup.root"
    dataTier:    "full-reconstructed"
    streamName: "out1"
  }
}

physics.producers.beamevent.SaveOutTree: true
physics.producers.beamevent.PrintDebug: false
physics.producers.beamevent.DebugTOFs: true
physics.producers.beamevent.ForceRead:            false
physics.producers.beamevent.MatchTime:            true

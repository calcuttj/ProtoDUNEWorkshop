#include "HDF5RawInput3.fcl"
#include "PDHDTPCReader.fcl"
#include "PDHDDataInterfaceWIBEth3.fcl"
#include "PDHDTriggerReader3.fcl"
#include "PDHDTimingRawDecoder.fcl"
#include "DAPHNEReaderPDHD.fcl"
#
#include "opticaldetectormodules_dune.fcl"
#include "Deconvolution.fcl"
#include "OpHitFinderDeco.fcl"
#include "OpSlicer.fcl"

#include "t0reco.fcl"
#include "pandoramodules_dune.fcl"
#include "wirecell_dune.fcl"
#include "particleid.fcl"

#include "CRT.fcl"
#include "T0RecoAnodePiercers.fcl"
#
#include "numberofhitsfilter.fcl"
#include "SpacePointSolver_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "calorimetry_pdune.fcl"
#include "calibration_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "PDHDFEMBFilter.fcl"

#include "services_dune.fcl"
#include "spacecharge_dune.fcl"
#include "dune_calibanatree.fcl"

process_name: myHitFinder 

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_data
  ChannelStatusService: @local::dunefd_channel_status
  WireReadout:          @local::dune_wire_readout
  GeometryConfigurationWriter:  {}
  Geometry:                     @local::protodunehdv7_geo
  DetectorClocksService:        @local::protodunehd_detectorclocks
  DetectorPropertiesService:    @local::protodunehd_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft
  DatabaseUtil:                 @local::dunefd_database
  BackTrackerService:           @local::pdsp_backtrackerservice
  ParticleInventoryService:     @local::dunefd_particleinventoryservice
  PhotonBackTrackerService:     @local::dunefd_photonbacktrackerservice_legacy
  SpaceCharge:                  @local::pdhd_spacecharge


  IFDH: {}

  TFileService: 
  {
    fileName: "pdhd_keepup_decoder.root"
  } 
  HDF5RawFile3Service:  {}

}

physics:
{

  filters: {
    nhitsfilter: @local::pdhd_nhitsfilter
  }

  producers:
  {
    # Hit finding
    gaushit:            @local::protodunespmc_gaushitfinder
    # space point solver
    reco3d:             @local::pdhd_data_spacepointsolver
    # actual disambiguation
    hitpdune:           @local::pdune_disambigfromsp
  }

  produce: [
    gaushit,
    nhitsfilter,
    reco3d,
    hitpdune
  ]

  output: [ out1 ]
  trigger_paths : [ produce ]
  end_paths: [ output ]
}

outputs:
{
  out1:
  {
    outputCommands: [ "keep *", "drop raw::RawDigit*_*_*_*"]
    compressionLevel: 1
    module_type: RootOutput
    fileName: "%ifb_%tc_keepup.root"
    dataTier:    "full-reconstructed"
    streamName: "out1"
  }
}
#source: @local::hdf5rawinput3
source:
{
  module_type: RootInput
  maxEvents: -1
  saveMemoryObjectThreshold: 0
}

physics.producers.gaushit.CalDataModuleLabel: "wclsdatahd:gauss"
